name: "Deploy Application Changes"

on:
  workflow_dispatch:

jobs:
  DeployApplicationChanges:
    name: "Deploy Application Changes"
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./app

    steps:
      - name: Checkout Repository üì¶
        uses: actions/checkout@v4

      - name: Configure AWS Credentials üîë
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform üèó
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.10.2
          terraform_wrapper: false # Necessary to access output

      - name: Terraform Init ‚ú®
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Setup Node üèó
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Generate ECS Task Definition
        id: apply-partial
        run: terraform apply -auto-approve -target=template_dir.task_definition
        working-directory: ./terraform

      - name: Save ECR name to Environment Variables
        run: echo "ECR_NAME=$(terraform output -raw ecr_repository_name)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Install packages
        run: npm ci

      - name: Compile project
        run: npm run compile

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR üè∑
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        working-directory: ./app

      - name: Fill in the new image ID in the Amazon ECS task definition ‚úí
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v2
        with:
          task-definition: ./terraform/rendered/task-definition.json
          container-name: container-definition
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition üöÄ
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ecs-service
          cluster: ecs-cluster
          wait-for-service-stability: true
